// 복수개 아이템의 transition delay 를 설정함
.mixin-nth-child-transition-delay(@itemsLength: 1, @delayTerm: 100, @delayStart: 1) when (@itemsLength > 0) {
    &:nth-child(@{itemsLength}) {
        @delay: (@itemsLength * @delayTerm) - @delayTerm + @delayStart;
        transition-delay: ~"@{delay}ms";
    }
    .mixin-nth-child-transition-delay(@itemsLength - 1, @delayTerm, @delayStart);
}

//////////////////////////////////

// set transition properties
.set-motion-transition(@duation: 600ms, @delay: 200ms, @easing: @ease-in-out) {
    transition-property: opacity, transform;
    transition-duration: @duation;
    transition-delay: @delay;
    transition-timing-function: @easing;
}

// set items delay, nth-child(i) { trantion-dealy: 1000ms ++ }
.set-motion-items-delay(@itemsLength: 20, @delayTerm: 100, @delayStart: 0){
    .mixin-nth-child-transition-delay(@itemsLength, @delayTerm, @delayStart);
}

// set motion hidden
.set-motion-hidden(@transition-property: ~"scale(1) translate3d(0, 60px, 0) scale(1)"){
    opacity: 0;
    transform: @transition-property;
}

// set motion visible
.set-motion-visible(@transition-property: ~"scale(1) translate3d(0, 0, 0) scale(1)"){
    transform: @transition-property;
    opacity: 1;
}

////////////////////////////////////////////////// inview

.js-inview {
    .js-text-item {
        opacity: 0;
        &.transit-a { // theme-a
            .set-motion-transition(); // set transition properties
            .set-motion-items-delay(1); // set items delay, 1
            .set-motion-hidden(); // set motion hidden
        }
    }
    &.is-inview {
        opacity: 1;
        .js-text-item {
            &.transit-a { // theme-a
                .set-motion-visible();
            }
        }
    }
}

.js-text-window-loaded {
    .js-text-item {
        .set-motion-transition(); // set transition properties
        .set-motion-items-delay(6); // set items delay, 1
        .set-motion-hidden(); // set motion hidden

        .is-window-loaded & {
            .set-motion-visible();
        }
    }
}
